version: '3.7'

services:
  app:
    build:
      args:
        user: ${APP_HOST}
        uid: 1000
      context: ./
      dockerfile: docker/app.dockerfile
    image: ${APP_NAME}
    container_name: ${APP_HOST}
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - mynetwork
      
  nginx:
    image: nginx:alpine
    container_name: ${NGINX_HOST}
    restart: unless-stopped
    ports:
      - ${NGINX_PORT_HTTP}:80
      - ${NGINX_PORT_HTTPS}:443
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/
    networks:
      - mynetwork

  db:
    image: mysql:8.0
    container_name: ${DB_HOST}
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports: 
      - ${DB_PORT}:3306
    volumes:
      - ./docker/mysql:/docker-entrypoint-initdb.d
    networks:
      - mynetwork

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5
    links: 
      - db:db
    ports:
      - ${PHPMYADMIN_PORT}:80
    container_name: ${PHPMYADMIN_HOST}
    environment:
      PMA_HOST: db
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      UPLOAD_LIMIT: 100M
    networks:
      - mynetwork

  mailhog:
    image: mailhog/mailhog
    container_name: ${MAIL_HOST}
    ports:
      - 1025:1025
      - ${MAIL_TARGET_PORT}:8025
    networks:
      - mynetwork

networks:
  mynetwork:
    name: ${APP_NETWORK}
    driver: bridge
    attachable: true
